/* Device Time On Tracker (Parent)
*  
*	2022 T. K. (kampto)
*	NOTES:  Track the time and counts a device is Active/On. Assign to a variable if needed. Refresh/Reset/Update variable various ways. Use variable in RM to trigger things. 
* 
*    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
*    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
*
*	Change Revision History:  
*	Ver		Date:		Who:		What:
* 	1.X.X	2023-4-12	kampto		Refernce Child App for revisions
* 	1.0.1	2022-10-02	kampto		First instance of Parent/Child apps.
*	1.1.1	2023-05-05	FriedCheese	Added option to install when opened.
*									Formatting changes.
*/

def setVersion(){
    state.name = "Device Time Active Tracker"
	state.version = "1.1.1"
}

definition(
	name: "Device Time Active Tracker", namespace: "kampto", author: "T. K.",
	description: "Track the time a device or thing is active. Attach to a variable",
	category: "General",
	iconUrl: "",
	iconX2Url: "",
	iconX3Url: "",
    importUrl: "https://raw.githubusercontent.com/kampto/Hubitat/main/Apps/DeviceTimeActiveTracker",
    documentationLink: "https://community.hubitat.com/t/beta-device-active-time-tracker-app-device-on-timer-and-on-counter-with-variables-access/102896",
	installOnOpen: true
)

preferences { page(name: "Config") }

def Config() {
    dynamicPage(name: "", title: "", install: true, uninstall: true) {
		displayTitle()
    	installCheck()
		if(state.appInstalled == 'COMPLETE'){
			section(getFormat("header","Purpose & Instructions:"), hideable: true, hidden: true) {
			paragraph getFormat("important","Purpose:<br>")+
			getFormat("important2","<ul>"+
			"<li>Track the time a device or thing is On, Open, Active.</li>"+
			"<li>Link variables to monitor on dashboard or rule machine.</li>"+
			"</ul>")

			paragraph getFormat("important","Instructions:<br>")+
			getFormat("important2","<ul>"+
			"<li>Use this Parent App to install one or more child apps.</li>"+
			"<li>Configure the child app; select devices, name it, hit done."+
            "<li>If you want to see the device On-time on dashoboard or as a device then first set up a variable in Settings/Hub Variables as String or Number and link to in the child app</li>"+
			"</ul>")
            }
			section("") {
				app(name: "anyOpenApp", appName: "Device Time Active Tracker Child", namespace: "kampto", title: getFormat("header","<b>Click to add a new 'Device Time Tracker' child"), multiple: true)
			}
  			
			section("") {
       		label title: getFormat("importantBold","Change name for parent app (optional)"), required: false
 			}
			
		}
	}
}

def installed() {
    log.debug "Installed with settings: ${settings}"
    initialize()
}

def updated() {
    log.debug "Updated with settings: ${settings}"
    unsubscribe()
    initialize()
}

def initialize() {
    log.info "There are ${childApps.size()} child apps"
    childApps.each {child ->
    log.info "Child app: ${child.label}"
    }
}

def installCheck(){  
    state.appInstalled = app.getInstallationState() 
	if(state.appInstalled != 'COMPLETE'){
		section{paragraph "Please hit 'Done' to install '${app.label}' parent app "}
  	}
  	else{
    	log.info "Parent Installed OK"
  	}
}

def getFormat(type, myText="") {
	if(type == "title") return "<h3 style='color:#0000ff;font-weight: bold'>${myText}</h3>"
	if(type == "header") return "<div style='color:#660000;font-weight: bold'>${myText}</div>"
	if(type == "red") return "<div style='color:#660000'>${myText}</div>"
	if(type == "importantBold") return "<div style='color:#32a4be;font-weight: bold'>${myText}</div>"
	if(type == "important") return "<div style='color:#32a4be'>${myText}</div>"
	if(type == "important2") return "<div style='color:#5a8200'>${myText}</div>"
	if(type == "important2Bold") return "<div style='color:#5a8200;font-weight: bold'>${myText}</div>"
	if(type == "lessImportant") return "<div style='color:green'>${myText}</div>"
	if(type == "rateDisplay") return "<div style='color:green; text-align: center;font-weight: bold'>${myText}</div>"
}

def displayTitle() {
    setVersion()
    theName = app.label
    if(theName == null || theName == "") theName = "New Child App"
	return section (getFormat("title",  "App: ${state.name} - ${"ver " + state.version}")) {}
    }
